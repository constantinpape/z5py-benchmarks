{
    "benchmarks.TimeSuite.time_read_gzip": {
        "code": "class TimeSuite:\n    def time_read_gzip(self):\n        with z5py.File(self.file_read) as f:\n            data = f['data_gzip'][:]\n\n    def setup(self):\n        self.data = z5py.util.fetch_test_data_stent()\n        self.chunks = (64,) * 3\n        try:\n            os.mkdir(self.tmp_folder)\n        except OSError:\n            pass\n        with z5py.File(self.file_read) as f:\n            f.create_dataset('data_gzip', data=self.data,\n                             compression='gzip', chunks=self.chunks)\n            f.create_dataset('data_raw', data=self.data,\n                             compression='raw', chunks=self.chunks)",
        "min_run_count": 2,
        "name": "benchmarks.TimeSuite.time_read_gzip",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "b33de2787b2e7a8e523f40067ec4356647677090bba796e2b0f2e2310b6694af",
        "warmup_time": -1
    },
    "benchmarks.TimeSuite.time_read_raw": {
        "code": "class TimeSuite:\n    def time_read_raw(self):\n        with z5py.File(self.file_read) as f:\n            data = f['data_raw'][:]\n\n    def setup(self):\n        self.data = z5py.util.fetch_test_data_stent()\n        self.chunks = (64,) * 3\n        try:\n            os.mkdir(self.tmp_folder)\n        except OSError:\n            pass\n        with z5py.File(self.file_read) as f:\n            f.create_dataset('data_gzip', data=self.data,\n                             compression='gzip', chunks=self.chunks)\n            f.create_dataset('data_raw', data=self.data,\n                             compression='raw', chunks=self.chunks)",
        "min_run_count": 2,
        "name": "benchmarks.TimeSuite.time_read_raw",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9e0f4755342676c1e19a252857b8088db2572a82afa289f38c74dbce6372902e",
        "warmup_time": -1
    },
    "benchmarks.TimeSuite.time_write_gzip": {
        "code": "class TimeSuite:\n    def time_write_gzip(self):\n        with z5py.File(self.file_write) as f:\n            f.create_dataset('data_gzip', data=self.data,\n                             compression='gzip', chunks=self.chunks)\n\n    def setup(self):\n        self.data = z5py.util.fetch_test_data_stent()\n        self.chunks = (64,) * 3\n        try:\n            os.mkdir(self.tmp_folder)\n        except OSError:\n            pass\n        with z5py.File(self.file_read) as f:\n            f.create_dataset('data_gzip', data=self.data,\n                             compression='gzip', chunks=self.chunks)\n            f.create_dataset('data_raw', data=self.data,\n                             compression='raw', chunks=self.chunks)",
        "min_run_count": 2,
        "name": "benchmarks.TimeSuite.time_write_gzip",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "65be130c68ff816db6891c62991b2587ff62014ecb81ead6258a6dbeb2e6d92e",
        "warmup_time": -1
    },
    "benchmarks.TimeSuite.time_write_raw": {
        "code": "class TimeSuite:\n    def time_write_raw(self):\n        with z5py.File(self.file_write) as f:\n            f.create_dataset('data_raw', data=self.data,\n                             compression='raw', chunks=self.chunks)\n\n    def setup(self):\n        self.data = z5py.util.fetch_test_data_stent()\n        self.chunks = (64,) * 3\n        try:\n            os.mkdir(self.tmp_folder)\n        except OSError:\n            pass\n        with z5py.File(self.file_read) as f:\n            f.create_dataset('data_gzip', data=self.data,\n                             compression='gzip', chunks=self.chunks)\n            f.create_dataset('data_raw', data=self.data,\n                             compression='raw', chunks=self.chunks)",
        "min_run_count": 2,
        "name": "benchmarks.TimeSuite.time_write_raw",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0c32360724269383a8d25077f657cd8dc980b23560323676648e4f9c3e1b89ea",
        "warmup_time": -1
    },
    "version": 2
}